{"version":3,"sources":["webpack://smarthome/./src/components/HomeComponent/HomeComponent.ts","webpack://smarthome/./src/components/HomeComponent/HomeComponent.html"],"names":["HomeComponent","HTMLElement","super","inProgress","this","innerHTML","abortContoller","AbortController","querySelector","addEventListener","lauterClick","signal","leiserClick","quelleAlexaClick","quelleMonitorClick","toggleDBFBClick","updateProgress","accessToken","googleAccessToken","b","div","querySelectorAll","forEach","d","setAttribute","removeAttribute","style","display","fnName","arg","token","getParticleToken","body","URLSearchParams","set","fetch","method","headers","executeParticleFunction","abort","particleToken","Date","exp","exchangeRes","ok","Error","status","tokenResponse","json","parseInt","expires_in","access_token","customElements","define","module","exports"],"mappings":"oMAIM,MAAOA,UAAsBC,YAM/B,cACIC,QAHI,KAAAC,YAAa,EAIjBC,KAAKC,UAAY,IAGrB,oBACID,KAAKE,eAAiB,IAAIC,gBAC1BH,KAAKI,cAAc,WAAWC,iBAAiB,SAAS,IAAML,KAAKM,eAAoB,CAAEC,OAAQP,KAAKE,eAAeK,SACrHP,KAAKI,cAAc,WAAWC,iBAAiB,SAAS,IAAML,KAAKQ,eAAoB,CAAED,OAAQP,KAAKE,eAAeK,SACrHP,KAAKI,cAAc,gBAAgBC,iBAAiB,SAAS,IAAML,KAAKS,oBAAyB,CAAEF,OAAQP,KAAKE,eAAeK,SAC/HP,KAAKI,cAAc,kBAAkBC,iBAAiB,SAAS,IAAML,KAAKU,sBAA2B,CAAEH,OAAQP,KAAKE,eAAeK,SACnIP,KAAKI,cAAc,eAAeC,iBAAiB,SAAS,IAAML,KAAKW,mBAAwB,CAAEJ,OAAQP,KAAKE,eAAeK,SAC7HP,KAAKY,gBAAe,GAGxB,qBAAqBC,GACjBb,KAAKc,kBAAoBD,EAG7B,eAAeE,GACXf,KAAKD,WAAagB,EAClB,IAAIC,EAAsBhB,KAAKI,cAAc,aAC7CJ,KAAKiB,iBAAiB,UAAUC,SAAQC,GAAKJ,EAAII,EAAEC,aAAa,WAAY,YAAcD,EAAEE,gBAAgB,cAC5GL,EAAIM,MAAMC,QAAUR,EAAI,GAAK,OAGI,8BAACS,EAAgBC,GAClD,IACI,GAAIzB,KAAKD,WACL,OAEJC,KAAKY,gBAAe,GACpB,IAAIc,QAAc1B,KAAK2B,mBACnBC,EAAO,IAAIC,gBACfD,EAAKE,IAAI,MAAOL,SACVM,MAAM,+DAA+DP,IAAU,CACjFQ,OAAQ,OACRJ,KAAMA,EACNK,QAAS,CACL,cAAiB,UAAUP,IAC3B,eAAgB,uCAb5B,QAkBI1B,KAAKY,gBAAe,IAIX,0BACPZ,KAAKkC,wBAAwB,UAAW,KAGjC,0BACPlC,KAAKkC,wBAAwB,UAAW,KAG5B,+BACZlC,KAAKkC,wBAAwB,UAAW,KAG1B,iCACdlC,KAAKkC,wBAAwB,UAAW,KAG7B,8BACXlC,KAAKkC,wBAAwB,UAAW,KAGlD,uBACIlC,KAAKE,eAAeiC,QAGM,yBAC1B,GAA0B,MAAtBnC,KAAKoC,gBAA4B,IAAIC,KAAUrC,KAAKoC,cAAcE,IAClE,OAAOtC,KAAKoC,cAAcV,MAE9B,IAAIE,EAAO,IAAIC,gBACfD,EAAKE,IAAI,aAAc,mDACvBF,EAAKE,IAAI,gBAAiB9B,KAAKc,mBAC/Bc,EAAKE,IAAI,qBAAsB,iDAC/B,IAAIS,QAAoBR,MAAM,8DAA+D,CACzFC,OAAQ,OACRJ,KAAMA,EACNK,QAAS,CACL,eAAgB,uCAGxB,IAAKM,EAAYC,GACb,MAAM,IAAIC,MAAM,6CAA6CF,EAAYG,UAE7E,IAAIC,QAAsBJ,EAAYK,OAClCN,GAAQ,IAAID,KAA6C,IAArCQ,SAASF,EAAcG,YAK/C,OAJA9C,KAAKoC,cAAgB,CACjBE,IAAKA,EACLZ,MAAOiB,EAAcI,cAElB/C,KAAKoC,cAAcV,OAIlCsB,eAAeC,OAAO,iBAAkBrD,I,iBC5GxCsD,EAAOC,QAFI","file":"823c062fbdfba6bae661.bundle.js","sourcesContent":["import template from \"./HomeComponent.html\";\nimport \"./HomeComponent.scss\";\nimport \"@polymer/paper-spinner/paper-spinner\";\n\nexport class HomeComponent extends HTMLElement {\n    private abortContoller: AbortController;\n    private googleAccessToken: string;\n    private particleToken: { token: string, exp: number };\n    private inProgress = false;\n\n    constructor() {\n        super();\n        this.innerHTML = template;\n    }\n\n    connectedCallback() {\n        this.abortContoller = new AbortController();\n        this.querySelector(\"#lauter\").addEventListener(\"click\", () => this.lauterClick(), <any>{ signal: this.abortContoller.signal });\n        this.querySelector(\"#leiser\").addEventListener(\"click\", () => this.leiserClick(), <any>{ signal: this.abortContoller.signal });\n        this.querySelector(\"#quelleAlexa\").addEventListener(\"click\", () => this.quelleAlexaClick(), <any>{ signal: this.abortContoller.signal });\n        this.querySelector(\"#quelleMonitor\").addEventListener(\"click\", () => this.quelleMonitorClick(), <any>{ signal: this.abortContoller.signal });\n        this.querySelector(\"#toggleDBFB\").addEventListener(\"click\", () => this.toggleDBFBClick(), <any>{ signal: this.abortContoller.signal });\n        this.updateProgress(false);\n    }\n\n    setGoogleAccessToken(accessToken: string) {\n        this.googleAccessToken = accessToken;\n    }\n\n    updateProgress(b: boolean) {\n        this.inProgress = b;\n        let div: HTMLDivElement = this.querySelector(\"#progress\");\n        this.querySelectorAll(\"button\").forEach(d => b ? d.setAttribute(\"disabled\", \"disabled\") : d.removeAttribute(\"disabled\"));\n        div.style.display = b ? \"\" : \"none\";\n    }\n\n    private async executeParticleFunction(fnName: string, arg: string) {\n        try {\n            if (this.inProgress) {\n                return;\n            }\n            this.updateProgress(true);\n            let token = await this.getParticleToken();\n            let body = new URLSearchParams();\n            body.set(\"arg\", arg);\n            await fetch(`https://api.particle.io/v1/devices/4e0033000651343530343432/${fnName}`, {\n                method: \"POST\",\n                body: body,\n                headers: {\n                    \"Authorization\": `Bearer ${token}`,\n                    \"Content-Type\": \"application/x-www-form-urlencoded\"\n                }\n            });\n        }\n        finally {\n            this.updateProgress(false);\n        }\n    }\n\n    async lauterClick() {\n        await this.executeParticleFunction(\"control\", \"i\");\n    }\n\n    async leiserClick() {\n        await this.executeParticleFunction(\"control\", \"d\");\n    }\n\n    async quelleAlexaClick() {\n        await this.executeParticleFunction(\"control\", \"v\");\n    }\n\n    async quelleMonitorClick() {\n        await this.executeParticleFunction(\"control\", \"c\");\n    }\n\n    async toggleDBFBClick() {\n        await this.executeParticleFunction(\"control\", \"b\");\n    }\n\n    disconnectedCallback() {\n        this.abortContoller.abort();\n    }\n\n    private async getParticleToken() {\n        if (this.particleToken != null && (+ new Date()) < this.particleToken.exp) {\n            return this.particleToken.token;\n        }\n        let body = new URLSearchParams();\n        body.set(\"grant_type\", \"urn:ietf:params:oauth:grant-type:token-exchange\");\n        body.set(\"subject_token\", this.googleAccessToken);\n        body.set(\"subject_token_type\", \"urn:ietf:params:oauth:token-type:access_token\")\n        let exchangeRes = await fetch(\"https://particle-google-auth-bridge.grapp.workers.dev/token\", {\n            method: \"POST\",\n            body: body,\n            headers: {\n                \"Content-Type\": \"application/x-www-form-urlencoded\"\n            }\n        });\n        if (!exchangeRes.ok) {\n            throw new Error(`Could not acquire particle token: Status: ${exchangeRes.status}`);\n        }\n        let tokenResponse = await exchangeRes.json();\n        let exp = +(new Date) + parseInt(tokenResponse.expires_in) * 1000\n        this.particleToken = {\n            exp: exp,\n            token: tokenResponse.access_token\n        };\n        return this.particleToken.token;\n    }\n}\n\ncustomElements.define(\"home-component\", HomeComponent);\n","// Module\nvar code = \"<div class=\\\"container\\\"> <div class=\\\"spinner-container\\\"> <paper-spinner active=\\\"\\\" id=\\\"progress\\\"></paper-spinner> </div> <div class=\\\"group\\\"> <h1>Volume</h1> <button id=\\\"leiser\\\">ðŸ”‰</button> <button id=\\\"lauter\\\">ðŸ”Š</button> </div> <div class=\\\"group\\\"> <h1>Source</h1> <button id=\\\"quelleAlexa\\\">Alexa</button> <button id=\\\"quelleMonitor\\\">Monitor</button> </div> <div class=\\\"group\\\"> <h1>Sound</h1> <button id=\\\"toggleDBFB\\\">DBFB</button> </div> </div>\";\n// Exports\nmodule.exports = code;"],"sourceRoot":""}