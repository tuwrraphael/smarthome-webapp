{"version":3,"sources":["webpack://smarthome/./src/components/HomeComponent/HomeComponent.ts","webpack://smarthome/./src/components/HomeComponent/HomeComponent.html"],"names":["HomeComponent","HTMLElement","super","this","innerHTML","abortContoller","AbortController","querySelector","addEventListener","lauterClick","signal","leiserClick","quelleAlexaClick","quelleMonitorClick","toggleDBFBClick","accessToken","googleAccessToken","fnName","arg","token","getParticleToken","body","URLSearchParams","set","fetch","method","headers","executeParticleFunction","abort","particleToken","Date","exp","exchangeRes","ok","Error","status","tokenResponse","json","parseInt","expires_in","access_token","customElements","define","module","exports"],"mappings":"4LAGM,MAAOA,UAAsBC,YAK/B,cACIC,QACAC,KAAKC,UAAY,IAGrB,oBACID,KAAKE,eAAiB,IAAIC,gBAC1BH,KAAKI,cAAc,WAAWC,iBAAiB,SAAS,IAAML,KAAKM,eAAoB,CAAEC,OAAQP,KAAKE,eAAeK,SACrHP,KAAKI,cAAc,WAAWC,iBAAiB,SAAS,IAAML,KAAKQ,eAAoB,CAAED,OAAQP,KAAKE,eAAeK,SACrHP,KAAKI,cAAc,gBAAgBC,iBAAiB,SAAS,IAAML,KAAKS,oBAAyB,CAAEF,OAAQP,KAAKE,eAAeK,SAC/HP,KAAKI,cAAc,kBAAkBC,iBAAiB,SAAS,IAAML,KAAKU,sBAA2B,CAAEH,OAAQP,KAAKE,eAAeK,SACnIP,KAAKI,cAAc,eAAeC,iBAAiB,SAAS,IAAML,KAAKW,mBAAwB,CAAEJ,OAAQP,KAAKE,eAAeK,SAGjI,qBAAqBK,GACjBZ,KAAKa,kBAAoBD,EAGQ,8BAACE,EAAgBC,GAClD,IAAIC,QAAchB,KAAKiB,mBACnBC,EAAO,IAAIC,gBACfD,EAAKE,IAAI,MAAOL,SACVM,MAAM,+DAA+DP,IAAU,CACjFQ,OAAQ,OACRJ,KAAMA,EACNK,QAAS,CACL,cAAiB,UAAUP,IAC3B,eAAgB,uCAKX,0BACPhB,KAAKwB,wBAAwB,UAAW,KAGjC,0BACPxB,KAAKwB,wBAAwB,UAAW,KAG5B,+BACZxB,KAAKwB,wBAAwB,UAAW,KAG1B,iCACdxB,KAAKwB,wBAAwB,UAAW,KAG7B,8BACXxB,KAAKwB,wBAAwB,UAAW,KAGlD,uBACIxB,KAAKE,eAAeuB,QAGM,yBAC1B,GAA0B,MAAtBzB,KAAK0B,gBAA4B,IAAIC,KAAU3B,KAAK0B,cAAcE,IAClE,OAAO5B,KAAK0B,cAAcV,MAE9B,IAAIE,EAAO,IAAIC,gBACfD,EAAKE,IAAI,aAAc,mDACvBF,EAAKE,IAAI,gBAAiBpB,KAAKa,mBAC/BK,EAAKE,IAAI,qBAAsB,iDAC/B,IAAIS,QAAoBR,MAAM,8DAA+D,CACzFC,OAAQ,OACRJ,KAAMA,EACNK,QAAS,CACL,eAAgB,uCAGxB,IAAKM,EAAYC,GACb,MAAM,IAAIC,MAAM,6CAA6CF,EAAYG,UAE7E,IAAIC,QAAsBJ,EAAYK,OAClCN,GAAQ,IAAID,KAA6C,IAArCQ,SAASF,EAAcG,YAK/C,OAJApC,KAAK0B,cAAgB,CACjBE,IAAKA,EACLZ,MAAOiB,EAAcI,cAElBrC,KAAK0B,cAAcV,OAIlCsB,eAAeC,OAAO,iBAAkB1C,I,iBCzFxC2C,EAAOC,QAFI","file":"f51e81a73391cc6b51a1.bundle.js","sourcesContent":["import template from \"./HomeComponent.html\";\nimport \"./HomeComponent.scss\";\n\nexport class HomeComponent extends HTMLElement {\n    private abortContoller: AbortController;\n    private googleAccessToken: string;\n    private particleToken: { token: string, exp: number };\n\n    constructor() {\n        super();\n        this.innerHTML = template;\n    }\n\n    connectedCallback() {\n        this.abortContoller = new AbortController();\n        this.querySelector(\"#lauter\").addEventListener(\"click\", () => this.lauterClick(), <any>{ signal: this.abortContoller.signal });\n        this.querySelector(\"#leiser\").addEventListener(\"click\", () => this.leiserClick(), <any>{ signal: this.abortContoller.signal });\n        this.querySelector(\"#quelleAlexa\").addEventListener(\"click\", () => this.quelleAlexaClick(), <any>{ signal: this.abortContoller.signal });\n        this.querySelector(\"#quelleMonitor\").addEventListener(\"click\", () => this.quelleMonitorClick(), <any>{ signal: this.abortContoller.signal });\n        this.querySelector(\"#toggleDBFB\").addEventListener(\"click\", () => this.toggleDBFBClick(), <any>{ signal: this.abortContoller.signal });\n    }\n\n    setGoogleAccessToken(accessToken: string) {\n        this.googleAccessToken = accessToken;\n    }\n\n    private async executeParticleFunction(fnName: string, arg: string) {\n        let token = await this.getParticleToken();\n        let body = new URLSearchParams();\n        body.set(\"arg\", arg);\n        await fetch(`https://api.particle.io/v1/devices/4e0033000651343530343432/${fnName}`, {\n            method: \"POST\",\n            body: body,\n            headers: {\n                \"Authorization\": `Bearer ${token}`,\n                \"Content-Type\": \"application/x-www-form-urlencoded\"\n            }\n        });\n    }\n\n    async lauterClick() {\n        await this.executeParticleFunction(\"control\", \"i\");\n    }\n\n    async leiserClick() {\n        await this.executeParticleFunction(\"control\", \"d\");\n    }\n\n    async quelleAlexaClick() {\n        await this.executeParticleFunction(\"control\", \"v\");\n    }\n\n    async quelleMonitorClick() {\n        await this.executeParticleFunction(\"control\", \"c\");\n    }\n\n    async toggleDBFBClick() {\n        await this.executeParticleFunction(\"control\", \"b\");\n    }\n\n    disconnectedCallback() {\n        this.abortContoller.abort();\n    }\n\n    private async getParticleToken() {\n        if (this.particleToken != null && (+ new Date()) < this.particleToken.exp) {\n            return this.particleToken.token;\n        }\n        let body = new URLSearchParams();\n        body.set(\"grant_type\", \"urn:ietf:params:oauth:grant-type:token-exchange\");\n        body.set(\"subject_token\", this.googleAccessToken);\n        body.set(\"subject_token_type\", \"urn:ietf:params:oauth:token-type:access_token\")\n        let exchangeRes = await fetch(\"https://particle-google-auth-bridge.grapp.workers.dev/token\", {\n            method: \"POST\",\n            body: body,\n            headers: {\n                \"Content-Type\": \"application/x-www-form-urlencoded\"\n            }\n        });\n        if (!exchangeRes.ok) {\n            throw new Error(`Could not acquire particle token: Status: ${exchangeRes.status}`);\n        }\n        let tokenResponse = await exchangeRes.json();\n        let exp = +(new Date) + parseInt(tokenResponse.expires_in) * 1000\n        this.particleToken = {\n            exp: exp,\n            token: tokenResponse.access_token\n        };\n        return this.particleToken.token;\n    }\n}\n\ncustomElements.define(\"home-component\", HomeComponent);\n","// Module\nvar code = \"<h2>Volume</h2> <button id=\\\"lauter\\\">+ lauter</button> <button id=\\\"leiser\\\">- leiser</button> <h2>Quelle</h2> <button id=\\\"quelleAlexa\\\">Alexa</button> <button id=\\\"quelleMonitor\\\">Monitor</button> <h2>Sound</h2> <button id=\\\"toggleDBFB\\\">DBFB</button>\";\n// Exports\nmodule.exports = code;"],"sourceRoot":""}